include: all_lint_rules.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/locales/generated/intl/*.dart"
    - "**/locales/generated/*.dart"
    - "**/generated_plugin_registrant.dart"

linter:
  rules:
    # False positive for custom enum-like classes (such as Flutter's "Colors")
    avoid_classes_with_only_static_members: false

    # False positive whe nthe future is returned by the function
    discarded_futures: false

    # Low value and lacks a quick fix
    combinators_ordering: false

    # Low value and high cost to change on all files
    eol_at_end_of_file: false

    # Conflicts with unused variables
    no_leading_underscores_for_local_identifiers: false

    # false positive
    one_member_abstracts: false

    # too verbose
    prefer_final_parameters: false

    # Too verbose with little value, and this is taken care of by the Flutter devtool anyway.
    diagnostic_describe_all_properties: false

    # Personal preference. I prefer "if (bool) return;" over having it in multiple lines
    always_put_control_body_on_new_line: false

    # Personal preference.
    cascade_invocations: true

    # Conflicts with `prefer_single_quotes`
    # Single quotes are easier to type and don't compromise on readability.
    prefer_double_quotes: false

    # Conflicts with `omit_local_variable_types` and other rules.
    # As per Dart guidelines, we want to avoid unnecessary types to make the code
    # more readable.
    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables
    always_specify_types: false

    # Incompatible with `prefer_final_locals`
    # Having immutable local variables makes larger functions more predictable
    # so we will use `prefer_final_locals` instead.
    unnecessary_final: false

    # Not quite suitable for Flutter, which may have a `build` method with a single
    # return, but that return is still complex enough that a "body" is worth it.
    prefer_expression_function_bodies: false

    # Conflicts with the convention used by flutter, which puts `Key key`
    # and `@required Widget child` last.
    always_put_required_named_parameters_first: false

    # There are situations where we voluntarily want to catch everything,
    # especially as a library.
    avoid_catches_without_on_clauses: false

    # Boring as it sometimes force a line of 81 characters to be split in two.
    # As long as we try to respect that 80 characters limit, going slightly
    # above is fine.
    lines_longer_than_80_chars: false

    # Conflicts with disabling `implicit-dynamic`
    avoid_annotating_with_dynamic: false

    # conflicts with `prefer_relative_imports`
    always_use_package_imports: false

    # Disabled for now until we have NNBD as it otherwise conflicts with `missing_return`
    no_default_cases: false

    public_member_api_docs: false
    sort_pub_dependencies: false
    avoid_dynamic_calls: false
    flutter_style_todos: true